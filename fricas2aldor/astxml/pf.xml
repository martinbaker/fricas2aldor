<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<file>
<func>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="PrimeField" />
<leaf symbol="p" />
</list>
<list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="FiniteFieldCategory" />
</list>
<list>
<leaf symbol="FiniteAlgebraicExtensionField" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol="ConvertibleTo" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="add" />
<list>
<leaf symbol="InnerPrimeField" />
<leaf symbol="p" />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G29612327" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="IntegerPrimesPackage" />
<list>
<leaf symbol="Integer" />
</list>
</list>
<leaf symbol="prime?" />
</list>
<leaf symbol="p" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G29612327" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="error" />
<leaf string="Argument to prime field must be a prime" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="InnerPrimeField" />
<leaf symbol="p" />
</list>
<list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="FiniteFieldCategory" />
</list>
<list>
<leaf symbol="FiniteAlgebraicExtensionField" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol="ConvertibleTo" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="add" />
<list>
<leaf symbol="IntegerMod" />
<leaf symbol="p" />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol=":" />
<leaf symbol="initializeElt" />
<list>
<leaf symbol="Mapping" />
<list>
<leaf symbol="Void" />
</list>
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="initializeLog" />
<list>
<leaf symbol="Mapping" />
<list>
<leaf symbol="Void" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="primitiveElt" />
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="sizeCG" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="qcoerce" />
<list>
<leaf symbol="-" />
<leaf symbol="p" />
<list>
<leaf symbol="One" />
</list>
</list>
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="facOfGroupSize" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="factor" />
<list>
<leaf symbol="Integer" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="exponent" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
<leaf symbol="construct" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="initlog?" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<leaf symbol="true" />
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="initelt?" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<leaf symbol="true" />
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="discLogTable" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<leaf symbol="table" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="generator" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="^" />
<leaf symbol="x" />
<leaf symbol="n" />
</list>
<list>
<list />
<leaf symbol="$" />
<list>
<leaf symbol="Integer" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G29608849" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="zero?" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G29608849" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G29608850" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="zero?" />
<leaf symbol="x" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G29608850" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="positiveRemainder" />
<leaf symbol="n" />
<list>
<leaf symbol="-" />
<leaf symbol="p" />
<list>
<leaf symbol="One" />
</list>
</list>
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="pretend" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="IntegerMod" />
<leaf symbol="p" />
</list>
<leaf symbol="^" />
</list>
<list>
<leaf symbol="pretend" />
<leaf symbol="x" />
<list>
<leaf symbol="IntegerMod" />
<leaf symbol="p" />
</list>
</list>
<leaf symbol="r" />
</list>
<leaf symbol="$" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G29608853" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&lt;=" />
<leaf symbol="p" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="convert" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SingleInteger" />
</list>
<leaf symbol="max" />
</list>
</list>
</list>
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G29608853" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="q" />
<list>
<leaf symbol="::" />
<leaf symbol="p" />
<list>
<leaf symbol="SingleInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="recip" />
<leaf symbol="x" />
</list>
<list>
<list />
<list />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G29608851" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="zero?" />
<list>
<leaf symbol="LET" />
<leaf symbol="y" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="convert" />
<leaf symbol="x" />
</list>
<list>
<leaf symbol="Integer" />
</list>
</list>
<list>
<leaf symbol="SingleInteger" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G29608851" />
<leaf string="failed" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="invmod" />
<leaf symbol="y" />
<leaf symbol="q" />
</list>
<list>
<leaf symbol="Integer" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="recip" />
<leaf symbol="x" />
</list>
<list>
<list />
<list />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G29608852" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="zero?" />
<list>
<leaf symbol="LET" />
<leaf symbol="y" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="convert" />
<leaf symbol="x" />
</list>
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G29608852" />
<leaf string="failed" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="invmod" />
<leaf symbol="y" />
<leaf symbol="p" />
</list>
<leaf symbol="$" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="convert" />
<leaf symbol="x" />
</list>
<list>
<list />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="pretend" />
<leaf symbol="x" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="normalElement" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="createNormalElement" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="characteristic" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<leaf symbol="p" />
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="factorsOfCyclicGroupSize" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="p" />
<leaf int="2" />
</list>
<leaf symbol="facOfGroupSize" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G29608854" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="empty?" />
<leaf symbol="facOfGroupSize" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G29608854" />
<list>
<leaf symbol="initializeElt" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="facOfGroupSize" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="representationType" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<leaf string="prime" />
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="tableForDiscreteLogarithm" />
<leaf symbol="fac" />
</list>
<list>
<list />
<list />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<leaf symbol="initlog?" />
<list>
<leaf symbol="initializeLog" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="tbl" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<leaf symbol="search" />
</list>
<list>
<leaf symbol="::" />
<leaf symbol="fac" />
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
<leaf symbol="discLogTable" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="tbl" />
<leaf string="failed" />
</list>
<list>
<leaf symbol="error" />
<leaf string="tableForDiscreteLogarithm: argument must be prime divisor of the order of the multiplicative group" />
</list>
<list>
<leaf symbol="pretend" />
<leaf symbol="tbl" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="primitiveElement" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<leaf symbol="initelt?" />
<list>
<leaf symbol="initializeElt" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="index" />
<leaf symbol="primitiveElt" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="initializeElt" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="facOfGroupSize" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Factored" />
<list>
<leaf symbol="Integer" />
</list>
</list>
<leaf symbol="factors" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Integer" />
</list>
<leaf symbol="factor" />
</list>
<leaf symbol="sizeCG" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="primitiveElt" />
<list>
<leaf symbol="lookup" />
<list>
<leaf symbol="createPrimitiveElement" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="initelt?" />
<leaf symbol="false" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Void" />
</list>
<leaf symbol="void" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="initializeLog" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<leaf symbol="initelt?" />
<list>
<leaf symbol="initializeElt" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="limit" />
<list>
<leaf symbol="Integer" />
</list>
</list>
<leaf int="30" />
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="f" />
<leaf symbol="facOfGroupSize" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="fac" />
<list>
<leaf symbol="f" />
<leaf symbol="factor" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="base" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol="^" />
<list>
<leaf symbol="primitiveElement" />
</list>
<list>
<leaf symbol="quo" />
<leaf symbol="sizeCG" />
<leaf symbol="fac" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="l" />
<list>
<leaf symbol="Integer" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Integer" />
</list>
<leaf symbol="length" />
</list>
<leaf symbol="fac" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="n" />
<list>
<leaf symbol="Integer" />
</list>
</list>
<list>
<leaf symbol="Zero" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G29608855" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Integer" />
</list>
<leaf symbol="odd?" />
</list>
<leaf symbol="l" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G29608855" />
<list>
<leaf symbol="LET" />
<leaf symbol="n" />
<list>
<leaf symbol="shift" />
<leaf symbol="fac" />
<list>
<leaf symbol="-" />
<list>
<leaf symbol="quo" />
<leaf symbol="l" />
<leaf int="2" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="n" />
<list>
<leaf symbol="shift" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="quo" />
<leaf symbol="l" />
<leaf int="2" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="&lt;" />
<leaf symbol="n" />
<leaf symbol="limit" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="d" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="quo" />
<list>
<leaf symbol="-" />
<leaf symbol="fac" />
<list>
<leaf symbol="One" />
</list>
</list>
<leaf symbol="limit" />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="n" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="quo" />
<list>
<leaf symbol="-" />
<leaf symbol="fac" />
<list>
<leaf symbol="One" />
</list>
</list>
<leaf symbol="d" />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="tbl" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<leaf symbol="table" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="a" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="i" />
<list>
<leaf symbol="SEGMENT" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="-" />
<leaf symbol="n" />
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<leaf symbol="insert!" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="key" />
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="entry" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<leaf symbol="construct" />
</list>
<list>
<leaf symbol="lookup" />
<leaf symbol="a" />
</list>
<list>
<leaf symbol="::" />
<leaf symbol="i" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<leaf symbol="tbl" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="a" />
<list>
<leaf symbol="*" />
<leaf symbol="a" />
<leaf symbol="base" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<leaf symbol="insert!" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="key" />
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="entry" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<leaf symbol="construct" />
</list>
<list>
<leaf symbol="::" />
<leaf symbol="fac" />
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="PositiveInteger" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<leaf symbol="copy" />
</list>
<leaf symbol="tbl" />
</list>
</list>
<leaf symbol="discLogTable" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="initlog?" />
<leaf symbol="false" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Void" />
</list>
<leaf symbol="void" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="degree" />
<leaf symbol="x" />
</list>
<list>
<list>
<leaf symbol="PositiveInteger" />
</list>
<list />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="extensionDegree" />
</list>
<list>
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="inGroundField?" />
<leaf symbol="x" />
</list>
<list>
<list />
<list />
</list>
<list>
<list />
<list />
</list>
<leaf symbol="true" />
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coordinates" />
<leaf symbol="x" />
</list>
<list>
<list />
<list />
</list>
<list>
<list />
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Vector" />
<leaf symbol="$" />
</list>
<leaf symbol="new" />
</list>
<list>
<leaf symbol="One" />
</list>
<leaf symbol="x" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="represents" />
<leaf symbol="v" />
</list>
<list>
<list />
<list />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="v" />
<list>
<leaf symbol="One" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="retract" />
<leaf symbol="x" />
</list>
<list>
<list />
<list />
</list>
<list>
<list />
<list />
</list>
<leaf symbol="x" />
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="retractIfCan" />
<leaf symbol="x" />
</list>
<list>
<list />
<list />
</list>
<list>
<list />
<list />
</list>
<leaf symbol="x" />
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="basis" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Vector" />
<leaf symbol="$" />
</list>
<leaf symbol="new" />
</list>
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<leaf symbol="$" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="basis" />
<leaf symbol="n" />
</list>
<list>
<list />
<list>
<leaf symbol="PositiveInteger" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="n" />
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<leaf symbol="basis" />
</list>
<list>
<leaf symbol="error" />
<leaf string="basis: argument must divide extension degree" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="definingPolynomial" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="-" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SparseUnivariatePolynomial" />
<leaf symbol="$" />
</list>
<leaf symbol="monomial" />
</list>
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SparseUnivariatePolynomial" />
<leaf symbol="$" />
</list>
<leaf symbol="monomial" />
</list>
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="Zero" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="minimalPolynomial" />
<leaf symbol="x" />
</list>
<list>
<list />
<list />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="-" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SparseUnivariatePolynomial" />
<leaf symbol="$" />
</list>
<leaf symbol="monomial" />
</list>
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SparseUnivariatePolynomial" />
<leaf symbol="$" />
</list>
<leaf symbol="monomial" />
</list>
<leaf symbol="x" />
<list>
<leaf symbol="Zero" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="charthRoot" />
<leaf symbol="x" />
</list>
<list>
<list />
<list />
</list>
<list>
<list />
<list />
</list>
<leaf symbol="x" />
</list>
</list>
</list>
</list>
</func>
</file>
