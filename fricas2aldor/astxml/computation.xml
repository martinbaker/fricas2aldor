<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<file>
<func>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="compCode" />
</list>
<list>
<list>
<leaf symbol="CATEGORY" />
<leaf symbol="package" />
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="writeCategory" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="writePackage" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Lambda" />
<list>
<leaf symbol="Typed" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
</list>
</list>
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="import" />
<list>
<leaf symbol="Typed" />
</list>
</list>
<list>
<leaf symbol="import" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="import" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Lambda" />
<list>
<leaf symbol="Typed" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="genCatHeader" />
<leaf symbol="shortName" />
<leaf symbol="longName" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string=")abbrev category " />
<leaf symbol="shortName" />
<leaf string=" " />
<leaf symbol="longName" />
</list>
</list>
<leaf string="" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf symbol="longName" />
<leaf string="() : Category == Type with" />
</list>
</list>
<leaf string="" />
<leaf string="" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="genFuncDeclar" />
<leaf symbol="content" />
<leaf symbol="numb" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="ILogic" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="fac" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
<list>
<leaf symbol="factor" />
<leaf symbol="content" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808972" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="empty?" />
<leaf symbol="fac" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808972" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string="  -- error" />
<list>
<leaf symbol="toString" />
<leaf symbol="content" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="deduct" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
<list>
<leaf symbol="deductions" />
<leaf symbol="fac" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808973" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="empty?" />
<leaf symbol="deduct" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808973" />
<list>
<leaf symbol="LET" />
<leaf symbol="deduct" />
<leaf symbol="fac" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="resType" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="first" />
<leaf symbol="deduct" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="resStr" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string="  fn" />
<list>
<leaf symbol="string" />
<leaf symbol="numb" />
</list>
<leaf string=":(" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="notfst" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="false" />
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="thisTerm" />
<leaf symbol="fac" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<leaf symbol="notfst" />
<list>
<leaf symbol="LET" />
<leaf symbol="resStr" />
<list>
<leaf symbol="concat" />
<leaf symbol="resStr" />
<leaf string="," />
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="resStr" />
<list>
<leaf symbol="concat" />
<leaf symbol="resStr" />
<list>
<leaf symbol="toStringUnwrapped" />
<leaf symbol="thisTerm" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="notfst" />
<list>
<leaf symbol="true" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="resStr" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf symbol="resStr" />
<leaf string=") -&gt; " />
<list>
<leaf symbol="toStringUnwrapped" />
<leaf symbol="resType" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<leaf symbol="resStr" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="genCatFooter" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="construct" />
<leaf string="" />
<leaf string="@" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="genPackageHeader" />
<leaf symbol="shortName" />
<leaf symbol="longName" />
<leaf symbol="catName" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string=")abbrev package " />
<leaf symbol="shortName" />
<leaf string=" " />
<leaf symbol="longName" />
</list>
</list>
<leaf string="" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf symbol="longName" />
<leaf string="(): Exports == Implementation where" />
</list>
</list>
<leaf string="" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string=" Exports ==&gt; " />
<leaf symbol="catName" />
<leaf string=" with" />
</list>
</list>
<leaf string="" />
<leaf string=" Implementation ==&gt; add" />
<leaf string="" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="genLambdaTerm" />
<leaf symbol="n" />
<leaf symbol="boundL" />
</list>
<list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="Lambda" />
<list>
<leaf symbol="Typed" />
</list>
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s" />
<list>
<leaf symbol="String" />
</list>
</list>
<leaf string="" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808975" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isBoundNode?" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808975" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="i" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<leaf symbol="+" />
<list>
<leaf symbol="getBoundValue" />
<leaf symbol="n" />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="&gt;" />
<leaf symbol="i" />
<list>
<leaf symbol="Zero" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808974" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&lt;=" />
<leaf symbol="i" />
<list>
<leaf symbol="#" />
<leaf symbol="boundL" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808974" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="boundL" />
<leaf symbol="i" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="string" />
<list>
<leaf symbol="-" />
<leaf symbol="i" />
<list>
<leaf symbol="One" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808976" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isFreeNode?" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808976" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Typed" />
</list>
<leaf symbol="getName" />
</list>
<list>
<leaf symbol="getVariable" />
<leaf symbol="n" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808977" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isCompound?" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808977" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="getChildren" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string=" " />
<list>
<leaf symbol="genLambdaTerm" />
<list>
<leaf symbol="first" />
<leaf symbol="ch" />
</list>
<leaf symbol="boundL" />
</list>
<leaf string="(" />
<list>
<leaf symbol="genLambdaTerm" />
<list>
<leaf symbol="second" />
<leaf symbol="ch" />
</list>
<leaf symbol="boundL" />
</list>
<leaf string=")" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808978" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isLambda?" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808978" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="varName" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Typed" />
</list>
<leaf symbol="getName" />
</list>
<list>
<leaf symbol="getVariable" />
<leaf symbol="n" />
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="WHILE" />
<list>
<leaf symbol="member?" />
<leaf symbol="varName" />
<leaf symbol="boundL" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="varName" />
<list>
<leaf symbol="concat" />
<leaf symbol="varName" />
<leaf string="'" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="boundL2" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<leaf symbol="concat" />
<leaf symbol="boundL" />
<leaf symbol="varName" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="getChildren" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string=" " />
<leaf symbol="varName" />
<leaf string="+-&gt;(" />
<list>
<leaf symbol="genLambdaTerm" />
<list>
<leaf symbol="first" />
<leaf symbol="ch" />
</list>
<leaf symbol="boundL2" />
</list>
<leaf string=")" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="s" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="genFuncDefn" />
<leaf symbol="content" />
<leaf symbol="numb" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="Lambda" />
<list>
<leaf symbol="Typed" />
</list>
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="sl" />
<list>
<leaf symbol="construct" />
<leaf string="" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808979" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isLambda?" />
<leaf symbol="content" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808979" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="var" />
<list>
<leaf symbol="getVariable" />
<leaf symbol="content" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="lhs" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="toString" />
<leaf symbol="var" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="lhsn" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="getName" />
<leaf symbol="var" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="lhst" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="toStringUnwrapped" />
<list>
<leaf symbol="getType" />
<leaf symbol="var" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="String" />
</list>
<leaf symbol="concat" />
</list>
<list>
<leaf symbol="construct" />
<leaf string="  fn" />
<list>
<leaf symbol="string" />
<leaf symbol="numb" />
</list>
<leaf string="(" />
<leaf symbol="lhs" />
<leaf string="):" />
<leaf symbol="lhst" />
<leaf string=" == " />
<list>
<leaf symbol="genLambdaTerm" />
<list>
<leaf symbol="first" />
<list>
<leaf symbol="getChildren" />
<leaf symbol="content" />
</list>
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="lhsn" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="sl" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="genPackageFooter" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="construct" />
<leaf string="" />
<leaf string="@" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="writeCategory" />
<leaf symbol="content" />
<leaf symbol="filename" />
<leaf symbol="shortName" />
<leaf symbol="longName" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="f1" />
<list>
<leaf symbol="TextFile" />
</list>
</list>
<list>
<leaf symbol="open" />
<list>
<leaf symbol="::" />
<leaf symbol="filename" />
<list>
<leaf symbol="FileName" />
</list>
</list>
<leaf string="output" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="lines" />
<list>
<leaf symbol="genCatHeader" />
<leaf symbol="shortName" />
<leaf symbol="longName" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="fnNum" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="thisEq" />
<leaf symbol="content" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="lines" />
<list>
<leaf symbol="concat" />
<leaf symbol="lines" />
<list>
<leaf symbol="genFuncDeclar" />
<leaf symbol="thisEq" />
<leaf symbol="fnNum" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="fnNum" />
<list>
<leaf symbol="+" />
<leaf symbol="fnNum" />
<list>
<leaf symbol="One" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="lines" />
<list>
<leaf symbol="concat" />
<leaf symbol="lines" />
<list>
<leaf symbol="genCatFooter" />
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="line" />
<leaf symbol="lines" />
</list>
<list>
<leaf symbol="writeLine!" />
<leaf symbol="f1" />
<leaf symbol="line" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="close!" />
<leaf symbol="f1" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="writePackage" />
<leaf symbol="content" />
<leaf symbol="filename" />
<leaf symbol="shortName" />
<leaf symbol="longName" />
<leaf symbol="catName" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Lambda" />
<list>
<leaf symbol="Typed" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="f1" />
<list>
<leaf symbol="TextFile" />
</list>
</list>
<list>
<leaf symbol="open" />
<list>
<leaf symbol="::" />
<leaf symbol="filename" />
<list>
<leaf symbol="FileName" />
</list>
</list>
<leaf string="output" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="lines" />
<list>
<leaf symbol="genPackageHeader" />
<leaf symbol="shortName" />
<leaf symbol="longName" />
<leaf symbol="catName" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="fnNum" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="thisEq" />
<leaf symbol="content" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="lines" />
<list>
<leaf symbol="concat" />
<leaf symbol="lines" />
<list>
<leaf symbol="genFuncDefn" />
<leaf symbol="thisEq" />
<leaf symbol="fnNum" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="fnNum" />
<list>
<leaf symbol="+" />
<leaf symbol="fnNum" />
<list>
<leaf symbol="One" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="lines" />
<list>
<leaf symbol="concat" />
<leaf symbol="lines" />
<list>
<leaf symbol="genPackageFooter" />
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="line" />
<leaf symbol="lines" />
</list>
<list>
<leaf symbol="writeLine!" />
<leaf symbol="f1" />
<leaf symbol="line" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="close!" />
<leaf symbol="f1" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="compUtil" />
<leaf symbol="UT" />
</list>
<list>
<list>
<leaf symbol="CATEGORY" />
<leaf symbol="package" />
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="ILogic" />
</list>
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="VarCat" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="import" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="varNum" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="s" />
</list>
<list>
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808875" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="atom?" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808875" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808872" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="isI?" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808872" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="strVar" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="concat" />
<leaf string="v" />
<list>
<leaf symbol="string" />
<leaf symbol="varNum" />
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule SL1: Ski[I] = \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="strVar" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=".0" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="varNum" />
<list>
<leaf symbol="+" />
<leaf symbol="varNum" />
<list>
<leaf symbol="One" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="parseLambda" />
</list>
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string="\" />
<leaf symbol="strVar" />
<leaf string=".0" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808873" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="isK?" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808873" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="strVar1" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="concat" />
<leaf string="v" />
<list>
<leaf symbol="string" />
<leaf symbol="varNum" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="strVar2" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="concat" />
<leaf string="v" />
<list>
<leaf symbol="string" />
<list>
<leaf symbol="+" />
<leaf symbol="varNum" />
<list>
<leaf symbol="One" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule SL2: Ski[K] = \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="strVar1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=".\" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="strVar2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=".1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="varNum" />
<list>
<leaf symbol="+" />
<leaf symbol="varNum" />
<leaf int="2" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="parseLambda" />
</list>
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string="\" />
<leaf symbol="strVar1" />
<leaf string=".\" />
<leaf symbol="strVar2" />
<leaf string=".1" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808874" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="isS?" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808874" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="strVar1" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="concat" />
<leaf string="v" />
<list>
<leaf symbol="string" />
<leaf symbol="varNum" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="strVar2" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="concat" />
<leaf string="v" />
<list>
<leaf symbol="string" />
<list>
<leaf symbol="+" />
<leaf symbol="varNum" />
<list>
<leaf symbol="One" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="strVar3" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="concat" />
<leaf string="v" />
<list>
<leaf symbol="string" />
<list>
<leaf symbol="+" />
<leaf symbol="varNum" />
<leaf int="2" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule SL3: Ski[S] = \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="strVar1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=".\" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="strVar2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=".\" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="strVar3" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=".(2 0 (1 0))" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="varNum" />
<list>
<leaf symbol="+" />
<leaf symbol="varNum" />
<leaf int="3" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="parseLambda" />
</list>
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string="\" />
<leaf symbol="strVar1" />
<leaf string=".\" />
<leaf symbol="strVar2" />
<leaf string=".\" />
<leaf symbol="strVar3" />
<leaf string=".(2 0 (1 0))" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce pass unbound variable " />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="getName" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getVariable" />
</list>
<leaf symbol="s" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" unchanged" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="lambda" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getVariable" />
</list>
<leaf symbol="s" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="subnodes" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getChildren" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c1" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<leaf symbol="subnodes" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c2" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="second" />
<leaf symbol="subnodes" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s1" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="toString" />
</list>
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s2" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="toString" />
</list>
<leaf symbol="c2" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808876" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="isI?" />
</list>
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808876" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce apply rule SL1 in:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="s" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c2" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808877" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="atom?" />
</list>
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808877" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule SL4: Ski[(" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" " />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=")] = (Ski[" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="] Ski[" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="])" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="lambda" />
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c1" />
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c2" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="subsubnodes" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getChildren" />
</list>
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c11" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<leaf symbol="subsubnodes" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c12" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="second" />
<leaf symbol="subsubnodes" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808878" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="isK?" />
</list>
<leaf symbol="c11" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808878" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s12" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="getName" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getVariable" />
</list>
<leaf symbol="c12" />
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce apply rule SL2 in:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="s" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c12" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808879" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="atom?" />
</list>
<leaf symbol="c11" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808879" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule SL4: Ski[(" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" " />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=")] = (Ski[" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="] Ski[" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="])" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="lambda" />
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c1" />
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c2" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="subsubnodes2" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getChildren" />
</list>
<leaf symbol="c11" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c111" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<leaf symbol="subsubnodes2" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c112" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="second" />
<leaf symbol="subsubnodes2" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808880" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="isS?" />
</list>
<leaf symbol="c111" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808880" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s2" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="getName" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getVariable" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s12" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="getName" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getVariable" />
</list>
<leaf symbol="c12" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s112" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="getName" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getVariable" />
</list>
<leaf symbol="c112" />
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce apply rule SL3 in:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="s" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="lambda" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="lambda" />
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c112" />
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c2" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="lambda" />
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c12" />
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c2" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule SL4: Ski[(" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" " />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=")] = (Ski[" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="] Ski[" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf symbol="s2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="])" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="lambda" />
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c1" />
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="c2" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="s" />
</list>
<list>
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="varNum" />
<list>
<leaf symbol="Zero" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="term" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="Ski2Lambda" />
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="term" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="lambdaOverSki" />
<leaf symbol="var" />
<leaf symbol="sk" />
</list>
<list>
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="UT" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808882" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="atom?" />
<leaf symbol="sk" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808882" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808881" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="freeVariable?" />
</list>
<leaf symbol="sk" />
<leaf symbol="var" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808881" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule LS3' applied to: \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="var" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="sk" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" giving K " />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="sk" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="ski" />
<list>
<leaf symbol="K" />
</list>
<leaf symbol="sk" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule LS4' applied to: \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="var" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="sk" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" giving I" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="I" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="ch" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getChildren" />
</list>
<leaf symbol="sk" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="left" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="right" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="second" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808883" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="freeVariable?" />
</list>
<leaf symbol="sk" />
<leaf symbol="var" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808883" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule LS3' applied to: \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="var" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="sk" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" giving K \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="var" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="left" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="var" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="right" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="ski" />
<list>
<leaf symbol="K" />
</list>
<list>
<leaf symbol="ski" />
<leaf symbol="left" />
<leaf symbol="right" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule LS5' applied to: \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="var" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="sk" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" giving S \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="var" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="left" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="var" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="right" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="ski" />
<list>
<leaf symbol="ski" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="S" />
</list>
</list>
<list>
<leaf symbol="lambdaOverSki" />
<leaf symbol="var" />
<leaf symbol="left" />
</list>
</list>
<list>
<leaf symbol="lambdaOverSki" />
<leaf symbol="var" />
<leaf symbol="right" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="lam" />
</list>
<list>
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808884" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="atom?" />
</list>
<leaf symbol="lam" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808884" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule LS1 applied to:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="lam" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" giving " />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="lam" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="ski" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="var" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="toString" />
</list>
<leaf symbol="lam" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808885" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="isCompound?" />
</list>
<leaf symbol="lam" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808885" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="ch" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="getChildren" />
</list>
<leaf symbol="lam" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c1" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c2" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="second" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule LS2 applied to:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="lam" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" giving (" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c1" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" " />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c2" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=")" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="ski" />
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c1" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c2" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808891" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="isLambda?" />
</list>
<leaf symbol="lam" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808891" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="lamUn" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="unbind" />
</list>
<leaf symbol="lam" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c3" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="getChildren" />
</list>
<leaf symbol="lamUn" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s3" />
<leaf symbol="UT" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="getVariable" />
</list>
<leaf symbol="lam" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808887" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="atom?" />
</list>
<leaf symbol="c3" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808887" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808886" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="toString" />
</list>
<leaf symbol="c3" />
</list>
<leaf string="0" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808886" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule LS4 applied to:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="lam" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" giving I" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="I" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808888" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="free?" />
</list>
<leaf symbol="lam" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808888" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule LS3 applied to:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="lam" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" giving K " />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c3" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="ski" />
</list>
<list>
<leaf symbol="K" />
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c3" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808889" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="isLambda?" />
</list>
<leaf symbol="c3" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808889" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c33" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="getChildren" />
</list>
<leaf symbol="c3" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="cxx" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="lambda" />
</list>
<leaf symbol="c33" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="getVariable" />
</list>
<leaf symbol="c3" />
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule LS5 applied to:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="lam" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" giving \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="s3" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="cxx" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambdaOverSki" />
<leaf symbol="s3" />
<list>
<leaf symbol="::" />
<leaf symbol="cxx" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808890" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isCompound?" />
<leaf symbol="c3" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808890" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="ch3" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<leaf symbol="getChildren" />
</list>
<leaf symbol="c3" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c31" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<leaf symbol="ch3" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c32" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="second" />
<leaf symbol="ch3" />
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce rule LS6 applied to:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="lam" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" giving S \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="s3" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c31" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string=" \" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="s3" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c32" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="ski" />
</list>
<list>
<leaf symbol="ski" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="S" />
</list>
</list>
<list>
<leaf symbol="lambdaOverSki" />
<leaf symbol="s3" />
<list>
<leaf symbol="::" />
<leaf symbol="c31" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="lambdaOverSki" />
<leaf symbol="s3" />
<list>
<leaf symbol="::" />
<leaf symbol="c32" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce warning could not match any rule to:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="lam" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="I" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="s" />
</list>
<list>
<list>
<leaf symbol="ILogic" />
</list>
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808895" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="atom?" />
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808895" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808892" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isI?" />
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808892" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="message" />
<leaf string="warning I does not have a parameter to act on" />
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="message" />
<leaf string="creating x" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="a" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="proposition" />
<leaf string="x" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="implies" />
<leaf symbol="a" />
<leaf symbol="a" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808893" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isK?" />
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808893" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="message" />
<leaf string="warning K does not enough parameters to act on" />
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="message" />
<leaf string="creating x and y" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="a" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="proposition" />
<leaf string="x" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="b" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="proposition" />
<leaf string="y" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="implies" />
<leaf symbol="a" />
<list>
<leaf symbol="implies" />
<leaf symbol="b" />
<leaf symbol="a" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808894" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isS?" />
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808894" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="message" />
<leaf string="warning S does not enough parameters to act on" />
</list>
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="message" />
<leaf string="creating x,y and z" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="a" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="proposition" />
<leaf string="x" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="b" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="proposition" />
<leaf string="y" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="proposition" />
<leaf string="z" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="ab" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="implies" />
<leaf symbol="a" />
<leaf symbol="b" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="ac" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="implies" />
<leaf symbol="a" />
<leaf symbol="c" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="bc" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="implies" />
<leaf symbol="b" />
<leaf symbol="c" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="implies" />
<list>
<leaf symbol="implies" />
<leaf symbol="a" />
<leaf symbol="bc" />
</list>
<list>
<leaf symbol="implies" />
<leaf symbol="ab" />
<leaf symbol="ac" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="proposition" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="getName" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getVariable" />
</list>
<leaf symbol="s" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="subnodes" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<leaf symbol="getChildren" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c1" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<leaf symbol="subnodes" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c2" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="second" />
<leaf symbol="subnodes" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808896" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isI?" />
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808896" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce apply rule SI1 in:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="s" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="a" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c1" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="implies" />
<leaf symbol="a" />
<leaf symbol="a" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808897" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="atom?" />
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808897" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="\/" />
<list>
<leaf symbol="::" />
<leaf symbol="c1" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c2" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="subsubnodes" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<leaf symbol="getChildren" />
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c11" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<leaf symbol="subsubnodes" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c12" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="second" />
<leaf symbol="subsubnodes" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808898" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isK?" />
<leaf symbol="c11" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808898" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce apply rule SI2 in:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="s" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="a" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c2" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="b" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c12" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="implies" />
<leaf symbol="a" />
<list>
<leaf symbol="implies" />
<leaf symbol="b" />
<leaf symbol="a" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808899" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="atom?" />
<leaf symbol="c11" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808899" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="\/" />
<list>
<leaf symbol="::" />
<leaf symbol="c1" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c2" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="subsubnodes2" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<leaf symbol="getChildren" />
<leaf symbol="c11" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c111" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="first" />
<leaf symbol="subsubnodes2" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c112" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="second" />
<leaf symbol="subsubnodes2" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15808900" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isS?" />
<leaf symbol="c111" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15808900" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="util coerce apply rule SI3 in:" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="s" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="a" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c2" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="b" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c12" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="c" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c112" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="ab" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="implies" />
<leaf symbol="a" />
<leaf symbol="b" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="ac" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="implies" />
<leaf symbol="a" />
<leaf symbol="c" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="bc" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="implies" />
<leaf symbol="b" />
<leaf symbol="c" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="implies" />
<list>
<leaf symbol="implies" />
<leaf symbol="a" />
<leaf symbol="bc" />
</list>
<list>
<leaf symbol="implies" />
<leaf symbol="ab" />
<leaf symbol="ac" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="\/" />
<list>
<leaf symbol="::" />
<leaf symbol="c1" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="c2" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="SKICombinators" />
<leaf symbol="UT" />
</list>
<list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="SetCategory" />
</list>
<list>
<leaf symbol="CATEGORY" />
<leaf symbol="domain" />
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="ski" />
<list>
<leaf symbol="$" />
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="ski" />
<list>
<leaf symbol="$" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="I" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="K" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="S" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="parseSki" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="parseTerm" />
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="getChildren" />
<list>
<list>
<leaf symbol="List" />
<leaf symbol="$" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="atom?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="variable?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="isI?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="isK?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="isS?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="getVariable" />
<list>
<leaf symbol="UT" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="freeVariable?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="redux" />
<list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="=" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="VarCat" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="LET" />
<leaf symbol="Rep" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="lf" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="nd" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="c1" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="c2" />
<leaf symbol="$" />
</list>
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="vr" />
<leaf symbol="UT" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="ski" />
<leaf symbol="x" />
<leaf symbol="y" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<leaf symbol="x" />
<leaf symbol="y" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="ski" />
<leaf symbol="t1" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="UT" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="t1" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="I" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="I" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="K" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="K" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="S" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseBracketTerm" />
<leaf symbol="t1" />
<leaf symbol="pin" />
</list>
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<leaf symbol="pin" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806002" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="(" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806002" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="error" />
<leaf string="bracket term must start with (" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="I" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806003" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806003" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="error" />
<leaf string="opening but no closing bracket" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="I" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="r2" />
<list>
<leaf symbol="parseTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="trm" />
<list>
<leaf symbol="r2" />
<leaf symbol="rft" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r2" />
<leaf symbol="pout" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806004" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string=")" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806004" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="error" />
<leaf string="can't find closing bracket" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="I" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<leaf symbol="trm" />
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseCombinatorTerm" />
<leaf symbol="t1" />
<leaf symbol="pin" />
</list>
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<leaf symbol="pin" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806005" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="I" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806005" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="I" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806006" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="K" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806006" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="K" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806007" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="S" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806007" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="error" />
<leaf string="invalid combinator" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="I" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseOneTerm" />
<leaf symbol="t1" />
<leaf symbol="pin" />
</list>
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<leaf symbol="pin" />
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="res" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="I" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="WHILE" />
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string=" " />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806008" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806008" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<leaf symbol="res" />
<leaf symbol="p1" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806011" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="alphabetic?" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806011" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806009" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="upperCase?" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806009" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="parseCombinatorTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="res" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r" />
<leaf symbol="pout" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806010" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="lowerCase?" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806010" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="r2" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="parseVarTerm" />
</list>
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="res" />
<list>
<leaf symbol="ski" />
<list>
<leaf symbol="r2" />
<leaf symbol="rft" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r2" />
<leaf symbol="pout" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806012" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="(" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806012" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="parseBracketTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="res" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r" />
<leaf symbol="pout" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<leaf symbol="res" />
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseTerm" />
<leaf symbol="t1" />
<leaf symbol="pin" />
</list>
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<leaf symbol="pin" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="parseOneTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="res" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r" />
<leaf symbol="pout" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806013" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806013" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<leaf symbol="res" />
<leaf symbol="p1" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="stck" />
<list>
<leaf symbol="List" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="construct" />
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="WHILE" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806014" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="alphabetic?" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806014" />
<leaf symbol="true" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806015" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string=" " />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806015" />
<leaf symbol="true" />
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="(" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="parseOneTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r" />
<leaf symbol="pout" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="stck" />
<list>
<leaf symbol="concat" />
<leaf symbol="stck" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806016" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806016" />
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="*" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="i" />
<list>
<leaf symbol="SEGMENT" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="#" />
<leaf symbol="stck" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="res" />
<list>
<leaf symbol="ski" />
<leaf symbol="res" />
<list>
<leaf symbol="stck" />
<leaf symbol="i" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<leaf symbol="res" />
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseSki" />
<leaf symbol="t1" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="parseTerm" />
<leaf symbol="t1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="minIndex" />
<leaf symbol="t1" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="getChildren" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="List" />
<leaf symbol="$" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806017" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="atom?" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806017" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="atom?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<leaf symbol="true" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="vr" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="variable?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="vr" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="isI?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<leaf symbol="noBranch" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806018" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="::" />
<leaf string="I" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806018" />
<list>
<leaf symbol="return" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="false" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="isK?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<leaf symbol="noBranch" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806019" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="::" />
<leaf string="K" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806019" />
<list>
<leaf symbol="return" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="false" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="isS?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<leaf symbol="noBranch" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806020" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="::" />
<leaf string="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806020" />
<list>
<leaf symbol="return" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="false" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="getVariable" />
<leaf symbol="n" />
</list>
<list>
<leaf symbol="UT" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="vr" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="n" />
<leaf symbol="vr" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="var" />
</list>
<leaf string=" " />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="freeVariable?" />
<leaf symbol="n" />
<leaf symbol="s" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
<leaf symbol="UT" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="vr" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806021" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="n" />
<leaf symbol="vr" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806021" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806022" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="freeVariable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806022" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806023" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="freeVariable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806023" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="true" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="toString" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s" />
<list>
<leaf symbol="String" />
</list>
</list>
<leaf string="" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806024" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="::" />
<leaf string="I" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806024" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<leaf string="I" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806025" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="::" />
<leaf string="K" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806025" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<leaf string="K" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806026" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="::" />
<leaf string="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806026" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<leaf string="S" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806028" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="atom?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806028" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806027" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="variable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806027" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf symbol="s" />
<list>
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
</list>
<leaf string=" " />
<list>
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf symbol="s" />
<list>
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf symbol="s" />
<list>
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
</list>
<leaf string="(" />
<list>
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
<leaf string=")" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="vr" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="toString" />
</list>
<list>
<leaf symbol="n" />
<leaf symbol="vr" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="s" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="redux1" />
<leaf symbol="n" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="left" />
<list>
<leaf symbol="redux1" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="right" />
<list>
<leaf symbol="redux1" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806029" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isI?" />
<leaf symbol="left" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806029" />
<list>
<leaf symbol="return" />
<leaf symbol="right" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="left" />
<leaf symbol="nd" />
</list>
<leaf symbol="noBranch" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="ski" />
<leaf symbol="left" />
<leaf symbol="right" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="leftleft" />
<list>
<list>
<leaf symbol="left" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="leftright" />
<list>
<list>
<leaf symbol="left" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806030" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isK?" />
<leaf symbol="leftleft" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806030" />
<list>
<leaf symbol="return" />
<leaf symbol="leftright" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="leftleft" />
<leaf symbol="nd" />
</list>
<leaf symbol="noBranch" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="ski" />
<leaf symbol="left" />
<leaf symbol="right" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="leftleftleft" />
<list>
<list>
<leaf symbol="leftleft" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="leftleftright" />
<list>
<list>
<leaf symbol="leftleft" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806031" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isS?" />
<leaf symbol="leftleftleft" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806031" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="ski" />
<list>
<leaf symbol="ski" />
<leaf symbol="leftleftright" />
<leaf symbol="right" />
</list>
<list>
<leaf symbol="ski" />
<leaf symbol="leftright" />
<leaf symbol="right" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="ski" />
<leaf symbol="left" />
<leaf symbol="right" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="n" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="redux" />
<leaf symbol="n" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="lastResult" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="I" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="thisResult" />
<list>
<leaf symbol="redux1" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="triesLeft" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf int="20" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="WHILE" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806032" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="~=" />
<leaf symbol="lastResult" />
<leaf symbol="thisResult" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806032" />
<list>
<leaf symbol="&gt;" />
<leaf symbol="triesLeft" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<leaf symbol="false" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="lastResult" />
<leaf symbol="thisResult" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="thisResult" />
<list>
<leaf symbol="redux1" />
<leaf symbol="lastResult" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="triesLeft" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="-" />
<leaf symbol="triesLeft" />
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="print" />
<list>
<leaf symbol="::" />
<leaf symbol="lastResult" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="thisResult" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="=" />
<leaf symbol="x" />
<leaf symbol="y" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="x" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="y" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806033" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="x" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="y" />
<leaf symbol="lf" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806033" />
<list>
<leaf symbol="return" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="x" />
<leaf symbol="vr" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="y" />
<leaf symbol="vr" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806034" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="x" />
<leaf symbol="vr" />
</list>
<list>
<leaf symbol="y" />
<leaf symbol="vr" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806034" />
<list>
<leaf symbol="return" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="x" />
<leaf symbol="nd" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="y" />
<leaf symbol="nd" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806035" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<list>
<leaf symbol="x" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
<list>
<list>
<leaf symbol="y" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806035" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806036" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<list>
<leaf symbol="x" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
<list>
<list>
<leaf symbol="y" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806036" />
<list>
<leaf symbol="return" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="false" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="empty" />
</list>
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="n" />
<leaf symbol="lf" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806038" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="atom?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806038" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15806037" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="variable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15806037" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="hconcat" />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="s" />
<list>
<leaf symbol="::" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="message" />
<leaf string=" " />
</list>
<list>
<leaf symbol="::" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="hconcat" />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="s" />
<list>
<leaf symbol="::" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="hconcat" />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="s" />
<list>
<leaf symbol="::" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c1" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="message" />
<leaf string="(" />
</list>
<list>
<leaf symbol="::" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="nd" />
</list>
<leaf symbol="c2" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="message" />
<leaf string=")" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="vr" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="n" />
<leaf symbol="vr" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="s" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="Lambda" />
<leaf symbol="UT" />
</list>
<list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="CoercibleTo" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="CATEGORY" />
<leaf symbol="domain" />
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="lambda" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="lambda" />
<list>
<leaf symbol="$" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="lambda" />
<list>
<leaf symbol="$" />
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="lambda" />
<list>
<leaf symbol="$" />
<leaf symbol="$" />
<leaf symbol="UT" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="parseLambda" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="parseTerm" />
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="atom?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="isCompound?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="isLambda?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="isBoundNode?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="isFreeNode?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="getBoundValue" />
<list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="getVariable" />
<list>
<leaf symbol="UT" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="free?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="getChildren" />
<list>
<list>
<leaf symbol="List" />
<leaf symbol="$" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="subst" />
<list>
<leaf symbol="$" />
<leaf symbol="$" />
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="bind" />
<list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="unbind" />
<list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="redux" />
<list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="=" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="toStringConven" />
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="VarCat" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="LET" />
<leaf symbol="Rep" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="boundTerm" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="varBound" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="freeTerm" />
<leaf symbol="UT" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="compoundTerm" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="c1" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="c2" />
<leaf symbol="$" />
</list>
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="lambdaTerm" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="c3" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="nm" />
<leaf symbol="UT" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="lambda" />
<leaf symbol="n1" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<leaf symbol="n1" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="lambda" />
<leaf symbol="var" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="UT" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="var" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="lambda" />
<leaf symbol="x" />
<leaf symbol="y" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<leaf symbol="x" />
<leaf symbol="y" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="lambda" />
<leaf symbol="x" />
<leaf symbol="t1" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
<leaf symbol="UT" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="lt" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<leaf symbol="x" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="bind" />
<leaf symbol="lt" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="getChildren" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="List" />
<leaf symbol="$" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802078" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="atom?" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802078" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="atom?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="true" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="isCompound?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="isLambda?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="isBoundNode?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="isFreeNode?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="getBoundValue" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="getVariable" />
<leaf symbol="n" />
</list>
<list>
<leaf symbol="UT" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="var" />
</list>
<leaf string="error" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="freeVariable?" />
<leaf symbol="n" />
<leaf symbol="s" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
<leaf symbol="UT" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802079" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802079" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802080" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="freeVariable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802080" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802081" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="freeVariable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802081" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802082" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="freeVariable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802082" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="true" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="freeVariable?" />
<leaf symbol="n" />
<leaf symbol="i" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802083" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
<leaf symbol="i" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802083" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802084" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="freeVariable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="+" />
<leaf symbol="i" />
<list>
<leaf symbol="One" />
</list>
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802084" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802085" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="freeVariable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
<leaf symbol="i" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802085" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802086" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="freeVariable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
<leaf symbol="i" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802086" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="true" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="free?" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="freeVariable?" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="print" />
<list>
<leaf symbol="hconcat" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="message" />
<leaf string="warning free called on non-lambda term" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="n" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="false" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseLambdaTerm" />
<leaf symbol="t1" />
<leaf symbol="pin" />
</list>
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<leaf symbol="pin" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802087" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="\" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802087" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="error" />
<leaf string="lambda term must start with \" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802088" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802088" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="error" />
<leaf string="lambda term not complete" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="parseVarTerm" />
</list>
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r" />
<leaf symbol="pout" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802089" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="." />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802089" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="error" />
<leaf string="lambda term must have ." />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802090" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802090" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="error" />
<leaf string="lambda term must contain something" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="r2" />
<list>
<leaf symbol="parseTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="ex" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol="r2" />
<leaf symbol="rft" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r2" />
<leaf symbol="pout" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="lambda" />
<leaf symbol="ex" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseBracketTerm" />
<leaf symbol="t1" />
<leaf symbol="pin" />
</list>
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<leaf symbol="pin" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802091" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="(" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802091" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="error" />
<leaf string="bracket term must start with (" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802092" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802092" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="error" />
<leaf string="opening but no closing bracket" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="r2" />
<list>
<leaf symbol="parseTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="trm" />
<list>
<leaf symbol="r2" />
<leaf symbol="rft" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r2" />
<leaf symbol="pout" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802093" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string=")" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802093" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="error" />
<leaf string="can't find closing bracket" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<leaf symbol="trm" />
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseVariableTerm" />
<leaf symbol="t1" />
<leaf symbol="pin" />
</list>
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<leaf symbol="pin" />
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="inx" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<leaf symbol="Zero" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="WHILE" />
<list>
<leaf symbol="digit?" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802094" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="0" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802094" />
<list>
<leaf symbol="LET" />
<leaf symbol="inx" />
<list>
<leaf symbol="*" />
<leaf symbol="inx" />
<leaf int="10" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802095" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802095" />
<list>
<leaf symbol="LET" />
<leaf symbol="inx" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="*" />
<leaf symbol="inx" />
<leaf int="10" />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802096" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="2" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802096" />
<list>
<leaf symbol="LET" />
<leaf symbol="inx" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="*" />
<leaf symbol="inx" />
<leaf int="10" />
</list>
<leaf int="2" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802097" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="3" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802097" />
<list>
<leaf symbol="LET" />
<leaf symbol="inx" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="*" />
<leaf symbol="inx" />
<leaf int="10" />
</list>
<leaf int="3" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802098" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="4" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802098" />
<list>
<leaf symbol="LET" />
<leaf symbol="inx" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="*" />
<leaf symbol="inx" />
<leaf int="10" />
</list>
<leaf int="4" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802099" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="5" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802099" />
<list>
<leaf symbol="LET" />
<leaf symbol="inx" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="*" />
<leaf symbol="inx" />
<leaf int="10" />
</list>
<leaf int="5" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802100" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="6" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802100" />
<list>
<leaf symbol="LET" />
<leaf symbol="inx" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="*" />
<leaf symbol="inx" />
<leaf int="10" />
</list>
<leaf int="6" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802101" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="7" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802101" />
<list>
<leaf symbol="LET" />
<leaf symbol="inx" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="*" />
<leaf symbol="inx" />
<leaf int="10" />
</list>
<leaf int="7" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802102" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="8" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802102" />
<list>
<leaf symbol="LET" />
<leaf symbol="inx" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="*" />
<leaf symbol="inx" />
<leaf int="10" />
</list>
<leaf int="8" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802103" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="9" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802103" />
<list>
<leaf symbol="LET" />
<leaf symbol="inx" />
<list>
<leaf symbol="+" />
<list>
<leaf symbol="*" />
<leaf symbol="inx" />
<leaf int="10" />
</list>
<leaf int="9" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802104" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802104" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="lambda" />
<leaf symbol="inx" />
</list>
<leaf symbol="p1" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="lambda" />
<leaf symbol="inx" />
</list>
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseTerm" />
<leaf symbol="t1" />
<leaf symbol="pin" />
</list>
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<leaf symbol="pin" />
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="res" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="WHILE" />
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string=" " />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802105" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802105" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<leaf symbol="res" />
<leaf symbol="p1" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="r" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="res" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802106" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="\" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802106" />
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="parseLambdaTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802107" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string="(" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802107" />
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="parseBracketTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802108" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="digit?" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802108" />
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="parseVariableTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="res" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r" />
<leaf symbol="pout" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802109" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="alphabetic?" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802109" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="r2" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="parseVarTerm" />
</list>
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="res" />
<list>
<leaf symbol="lambda" />
<list>
<leaf symbol="r2" />
<leaf symbol="rft" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r2" />
<leaf symbol="pout" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802110" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802110" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<leaf symbol="res" />
<leaf symbol="p1" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802112" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string=" " />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802112" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="+" />
<leaf symbol="p1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802111" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="p1" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802111" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<leaf symbol="res" />
<leaf symbol="p1" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="parseTerm" />
<leaf symbol="t1" />
<leaf symbol="p1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="p1" />
<list>
<leaf symbol="r" />
<leaf symbol="pout" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="res" />
<list>
<leaf symbol="lambda" />
<leaf symbol="res" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<leaf symbol="res" />
<leaf symbol="p1" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseLambda" />
<leaf symbol="t1" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="r" />
<list>
<leaf symbol="parseTerm" />
<leaf symbol="t1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="minIndex" />
<leaf symbol="t1" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="toStringConven" />
<leaf symbol="n" />
<leaf symbol="boundL" />
</list>
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s" />
<list>
<leaf symbol="String" />
</list>
</list>
<leaf string="" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="i" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<leaf symbol="+" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="&gt;" />
<leaf symbol="i" />
<list>
<leaf symbol="Zero" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802113" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&lt;=" />
<leaf symbol="i" />
<list>
<leaf symbol="#" />
<leaf symbol="boundL" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802113" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="boundL" />
<leaf symbol="i" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="string" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="getName" />
</list>
<list>
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string="(" />
<list>
<leaf symbol="toStringConven" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
<leaf symbol="boundL" />
</list>
<leaf string=" " />
<list>
<leaf symbol="toStringConven" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
<leaf symbol="boundL" />
</list>
<leaf string=")" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="varName" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="getName" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="WHILE" />
<list>
<leaf symbol="member?" />
<leaf symbol="varName" />
<leaf symbol="boundL" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="varName" />
<list>
<leaf symbol="concat" />
<leaf symbol="varName" />
<leaf string="'" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="boundL2" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<leaf symbol="concat" />
<leaf symbol="boundL" />
<leaf symbol="varName" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string="(\" />
<leaf symbol="varName" />
<leaf string="." />
<list>
<leaf symbol="toStringConven" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<leaf symbol="boundL2" />
</list>
<leaf string=")" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="s" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="toString" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s" />
<list>
<leaf symbol="String" />
</list>
</list>
<leaf string="" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="string" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="toString" />
</list>
<list>
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string="(" />
<list>
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
</list>
<leaf string=" " />
<list>
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
</list>
<leaf string=")" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<leaf string="(\" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="toString" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
<leaf string="." />
<list>
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
</list>
<leaf string=")" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="s" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="subst" />
<leaf symbol="n" />
<leaf symbol="a" />
<leaf symbol="b" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
<leaf symbol="$" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="n" />
<leaf symbol="b" />
</list>
<list>
<leaf symbol="return" />
<leaf symbol="a" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<list>
<leaf symbol="subst" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
<leaf symbol="a" />
<leaf symbol="b" />
</list>
<list>
<leaf symbol="subst" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
<leaf symbol="a" />
<leaf symbol="b" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<list>
<leaf symbol="subst" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<leaf symbol="a" />
<leaf symbol="b" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="n" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="bindTerm" />
<leaf symbol="n" />
<leaf symbol="i" />
<leaf symbol="s" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
<leaf symbol="UT" />
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802114" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
<leaf symbol="s" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802114" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<leaf symbol="i" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<list>
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="bindTerm" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<list>
<leaf symbol="+" />
<leaf symbol="i" />
<list>
<leaf symbol="One" />
</list>
</list>
<leaf symbol="s" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<list>
<leaf symbol="bindTerm" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
<leaf symbol="i" />
<leaf symbol="s" />
</list>
<list>
<leaf symbol="bindTerm" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
<leaf symbol="i" />
<leaf symbol="s" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="n" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="bind" />
<leaf symbol="n" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="bindTerm" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<list>
<leaf symbol="Zero" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="n" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="unbindTerm" />
<leaf symbol="n" />
<leaf symbol="i" />
<leaf symbol="s" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
<leaf symbol="UT" />
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802115" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
<leaf symbol="i" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802115" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<leaf symbol="s" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<list>
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="unbindTerm" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<list>
<leaf symbol="+" />
<leaf symbol="i" />
<list>
<leaf symbol="One" />
</list>
</list>
<leaf symbol="s" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<list>
<leaf symbol="unbindTerm" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
<leaf symbol="i" />
<leaf symbol="s" />
</list>
<list>
<leaf symbol="unbindTerm" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
<leaf symbol="i" />
<leaf symbol="s" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="n" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="unbind" />
<leaf symbol="n" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="unbindTerm" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<list>
<leaf symbol="Zero" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="n" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="redux" />
<leaf symbol="n" />
</list>
<list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802116" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="atom?" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802116" />
<list>
<leaf symbol="return" />
<leaf symbol="n" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="term1" />
<leaf symbol="$" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="term2" />
<leaf symbol="$" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802117" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="isLambda?" />
<leaf symbol="term1" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802117" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="boundVarName" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="getName" />
</list>
<list>
<list>
<leaf symbol="term1" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="subst" />
<leaf symbol="term1" />
<leaf symbol="term2" />
<list>
<leaf symbol="lambda" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="Zero" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<list>
<leaf symbol="redux" />
<leaf symbol="term1" />
</list>
<list>
<leaf symbol="redux" />
<leaf symbol="term2" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="return" />
<list>
<leaf symbol="lambda" />
<list>
<leaf symbol="redux" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="n" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="=" />
<leaf symbol="x" />
<leaf symbol="y" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="x" />
<leaf symbol="boundTerm" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="y" />
<leaf symbol="boundTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802118" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<list>
<leaf symbol="x" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
<list>
<list>
<leaf symbol="y" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802118" />
<list>
<leaf symbol="return" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="x" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="y" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802119" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="x" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="y" />
<leaf symbol="freeTerm" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802119" />
<list>
<leaf symbol="return" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="x" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="y" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802120" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<list>
<leaf symbol="x" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
<list>
<list>
<leaf symbol="y" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802120" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802121" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<list>
<leaf symbol="x" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
<list>
<list>
<leaf symbol="y" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802121" />
<list>
<leaf symbol="return" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="x" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="y" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802122" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<list>
<leaf symbol="x" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<list>
<list>
<leaf symbol="y" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802122" />
<list>
<leaf symbol="return" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<leaf symbol="false" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="false" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="toOutputFormConven" />
<leaf symbol="n" />
<leaf symbol="boundL" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="empty" />
</list>
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="i" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<leaf symbol="+" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
<list>
<leaf symbol="One" />
</list>
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="&gt;" />
<leaf symbol="i" />
<list>
<leaf symbol="Zero" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15802123" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&lt;=" />
<leaf symbol="i" />
<list>
<leaf symbol="#" />
<leaf symbol="boundL" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15802123" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="message" />
<list>
<leaf symbol="boundL" />
<leaf symbol="i" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="::" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="boundTerm" />
</list>
<leaf symbol="varBound" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="n" />
<leaf symbol="freeTerm" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="hconcat" />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="message" />
<leaf string="(" />
</list>
<list>
<leaf symbol="toOutputFormConven" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c1" />
</list>
<leaf symbol="boundL" />
</list>
<list>
<leaf symbol="message" />
<leaf string=" " />
</list>
<list>
<leaf symbol="toOutputFormConven" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="compoundTerm" />
</list>
<leaf symbol="c2" />
</list>
<leaf symbol="boundL" />
</list>
<list>
<leaf symbol="message" />
<leaf string=")" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="varName" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="UT" />
<leaf symbol="getName" />
</list>
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="nm" />
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="WHILE" />
<list>
<leaf symbol="member?" />
<leaf symbol="varName" />
<leaf symbol="boundL" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="varName" />
<list>
<leaf symbol="concat" />
<leaf symbol="varName" />
<leaf string="'" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="boundL2" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<leaf symbol="concat" />
<leaf symbol="boundL" />
<leaf symbol="varName" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="s" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="hconcat" />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="message" />
<leaf string="(\" />
</list>
<list>
<leaf symbol="message" />
<leaf symbol="varName" />
</list>
<list>
<leaf symbol="message" />
<leaf string="." />
</list>
<list>
<leaf symbol="toOutputFormConven" />
<list>
<list>
<leaf symbol="n" />
<leaf symbol="lambdaTerm" />
</list>
<leaf symbol="c3" />
</list>
<leaf symbol="boundL2" />
</list>
<list>
<leaf symbol="message" />
<leaf string=")" />
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="s" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="toOutputFormConven" />
<leaf symbol="n" />
<list>
<leaf symbol="construct" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="Typed" />
</list>
<list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="VarCat" />
</list>
<list>
<leaf symbol="CoercibleTo" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="LET" />
<leaf symbol="Rep" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="nme" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="typ" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="var" />
<leaf symbol="n" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="n" />
<list>
<leaf symbol="logicT" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="var" />
<leaf symbol="n" />
<leaf symbol="t" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="n" />
<leaf symbol="t" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="getName" />
<leaf symbol="v" />
</list>
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="v" />
<leaf symbol="nme" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="getType" />
<leaf symbol="v" />
</list>
<list>
<list>
<leaf symbol="ILogic" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="v" />
<leaf symbol="typ" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="toString" />
<leaf symbol="v" />
</list>
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="s" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<leaf symbol="concat" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="v" />
<leaf symbol="nme" />
</list>
<leaf string=":" />
<list>
<leaf symbol="toString" />
<list>
<leaf symbol="v" />
<leaf symbol="typ" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="s" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseVarTerm" />
<leaf symbol="t1" />
<leaf symbol="pin" />
</list>
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="vnm" />
<list>
<leaf symbol="String" />
</list>
</list>
<leaf string="" />
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="pt" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<leaf symbol="pin" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="pt" />
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="WHILE" />
<list>
<leaf symbol="alphanumeric?" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="vnm" />
<list>
<leaf symbol="concat" />
<leaf symbol="vnm" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="pt" />
<list>
<leaf symbol="+" />
<leaf symbol="pt" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15801149" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="pt" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15801149" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="var" />
<leaf symbol="vnm" />
</list>
<leaf symbol="pt" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="pt" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15801151" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string=":" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15801151" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="pt" />
<list>
<leaf symbol="+" />
<leaf symbol="pt" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15801150" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="pt" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15801150" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="var" />
<leaf symbol="vnm" />
</list>
<leaf symbol="pt" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="r" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="ILogic" />
</list>
<leaf symbol="parseIL2" />
</list>
<leaf symbol="t1" />
<leaf symbol="pt" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="pt" />
<list>
<leaf symbol="r" />
<leaf symbol="pout" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="var" />
<leaf symbol="vnm" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
<leaf symbol="pt" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="var" />
<leaf symbol="vnm" />
</list>
<leaf symbol="pt" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseVar" />
<leaf symbol="t1" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="r" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="parseVarTerm" />
<leaf symbol="t1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="=" />
<leaf symbol="x" />
<leaf symbol="y" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15801152" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="x" />
<leaf symbol="nme" />
</list>
<list>
<leaf symbol="y" />
<leaf symbol="nme" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15801152" />
<list>
<leaf symbol="=" />
<list>
<leaf symbol="x" />
<leaf symbol="typ" />
</list>
<list>
<leaf symbol="y" />
<leaf symbol="typ" />
</list>
</list>
<leaf symbol="false" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="hconcat" />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="message" />
<list>
<leaf symbol="n" />
<leaf symbol="nme" />
</list>
</list>
<list>
<leaf symbol="message" />
<leaf string=":" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="n" />
<leaf symbol="typ" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="Untyped" />
</list>
<list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="VarCat" />
</list>
<list>
<leaf symbol="CoercibleTo" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="LET" />
<leaf symbol="Rep" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="nme" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="var" />
<leaf symbol="n" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="var" />
<leaf symbol="n" />
<leaf symbol="t" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="n" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="getName" />
<leaf symbol="v" />
</list>
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="v" />
<leaf symbol="nme" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="getType" />
<leaf symbol="v" />
</list>
<list>
<list>
<leaf symbol="ILogic" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="logicT" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="toString" />
<leaf symbol="v" />
</list>
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="v" />
<leaf symbol="nme" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseVarTerm" />
<leaf symbol="t1" />
<leaf symbol="pin" />
</list>
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="vnm" />
<list>
<leaf symbol="String" />
</list>
</list>
<leaf string="" />
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="pt" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
<leaf symbol="pin" />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="pt" />
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="WHILE" />
<list>
<leaf symbol="alphanumeric?" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="vnm" />
<list>
<leaf symbol="concat" />
<leaf symbol="vnm" />
<leaf symbol="ch" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="pt" />
<list>
<leaf symbol="+" />
<leaf symbol="pt" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15800672" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="&gt;" />
<leaf symbol="pt" />
<list>
<leaf symbol="maxIndex" />
<leaf symbol="t1" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15800672" />
<list>
<leaf symbol="return" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="var" />
<leaf symbol="vnm" />
</list>
<leaf symbol="pt" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="ch" />
<list>
<leaf symbol="qelt" />
<leaf symbol="t1" />
<leaf symbol="pt" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G15800673" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="ch" />
<list>
<leaf symbol="char" />
<leaf string=":" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G15800673" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="r" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<list>
<leaf symbol="ILogic" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="ILogic" />
</list>
<leaf symbol="parseIL2" />
</list>
<leaf symbol="t1" />
<leaf symbol="pt" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="pt" />
<list>
<leaf symbol="r" />
<leaf symbol="pout" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="var" />
<leaf symbol="vnm" />
</list>
<leaf symbol="pt" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parseVar" />
<leaf symbol="t1" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="r" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="parseVarTerm" />
<leaf symbol="t1" />
<list>
<leaf symbol="::" />
<list>
<leaf symbol="One" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="r" />
<leaf symbol="rft" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="=" />
<leaf symbol="x" />
<leaf symbol="y" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="x" />
<leaf symbol="nme" />
</list>
<list>
<leaf symbol="y" />
<leaf symbol="nme" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="n" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="message" />
<list>
<leaf symbol="n" />
<leaf symbol="nme" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="VarCat" />
</list>
<list>
<list>
<leaf symbol="Category" />
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="Type" />
</list>
<list>
<leaf symbol="CoercibleTo" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="CATEGORY" />
<leaf symbol="domain" />
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="var" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="var" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="ILogic" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="getName" />
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="getType" />
<list>
<list>
<leaf symbol="ILogic" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="toString" />
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="parseVar" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="parseVarTerm" />
<list>
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="rft" />
<leaf symbol="$" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="pout" />
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="String" />
</list>
<list>
<leaf symbol="NonNegativeInteger" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="=" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
</list>
</list>
</list>
</list>
</func>
</file>
