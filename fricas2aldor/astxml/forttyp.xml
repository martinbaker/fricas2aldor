<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<file>
<func>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="TheSymbolTable" />
</list>
<list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="CoercibleTo" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="CATEGORY" />
<leaf symbol="domain" />
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="showTheSymbolTable" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="clearTheSymbolTable" />
<list>
<list>
<leaf symbol="Void" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="clearTheSymbolTable" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="declare!" />
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="declare!" />
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="declare!" />
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="declare!" />
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="newSubProgram" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="currentSubProgram" />
<list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="endSubProgram" />
<list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="argumentList!" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="argumentList!" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="argumentList!" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="returnType!" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="returnType!" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="returnType!" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="printHeader" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="printHeader" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="printHeader" />
<list>
<list>
<leaf symbol="Void" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="printTypes" />
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="empty" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="returnTypeOf" />
<list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="argumentListOf" />
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="symbolTableOf" />
<list>
<list>
<leaf symbol="SymbolTable" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
</list>
</list>
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="LET" />
<leaf symbol="Entry" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="symtab" />
<list>
<leaf symbol="SymbolTable" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="returnType" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="argList" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="Rep" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="Entry" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="theSymbolTable" />
<leaf symbol="$" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="empty" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="currentSubProgramName" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="QUOTE" />
<leaf symbol="MAIN" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="newEntry" />
</list>
<list>
<leaf symbol="Entry" />
</list>
<list>
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="construct" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SymbolTable" />
</list>
<leaf symbol="empty" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<leaf symbol="construct" />
</list>
<leaf string="void" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="construct" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="checkIfEntryExists" />
<leaf symbol="name" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18495218" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="key?" />
<leaf symbol="name" />
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18495218" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Void" />
</list>
<leaf symbol="void" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="setelt!" />
</list>
<leaf symbol="tab" />
<leaf symbol="name" />
<list>
<leaf symbol="newEntry" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Void" />
</list>
<leaf symbol="void" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="returnTypeOf" />
<leaf symbol="name" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="elt" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="tab" />
<leaf symbol="name" />
</list>
<leaf symbol="returnType" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="argumentListOf" />
<leaf symbol="name" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="elt" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="tab" />
<leaf symbol="name" />
</list>
<leaf symbol="argList" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="symbolTableOf" />
<leaf symbol="name" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="SymbolTable" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="elt" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="tab" />
<leaf symbol="name" />
</list>
<leaf symbol="symtab" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="u" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="coerce" />
</list>
<leaf symbol="u" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="showTheSymbolTable" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<leaf symbol="theSymbolTable" />
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="clearTheSymbolTable" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="theSymbolTable" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="empty" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Void" />
</list>
<leaf symbol="void" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="clearTheSymbolTable" />
<leaf symbol="u" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="remove!" />
</list>
<leaf symbol="u" />
<leaf symbol="theSymbolTable" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Void" />
</list>
<leaf symbol="void" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="empty" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="empty" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="currentSubProgram" />
</list>
<list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<list />
</list>
<leaf symbol="currentSubProgramName" />
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="endSubProgram" />
</list>
<list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="currentSubProgramName" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="MAIN" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="newSubProgram" />
<leaf symbol="u" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="setelt!" />
</list>
<leaf symbol="theSymbolTable" />
<leaf symbol="u" />
<list>
<leaf symbol="newEntry" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="currentSubProgramName" />
<leaf symbol="u" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Void" />
</list>
<leaf symbol="void" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="argumentList!" />
<leaf symbol="u" />
<leaf symbol="args" />
<leaf symbol="symbols" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="checkIfEntryExists" />
<leaf symbol="u" />
<leaf symbol="symbols" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="setelt!" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="symbols" />
<leaf symbol="u" />
</list>
<leaf symbol="argList" />
<leaf symbol="args" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="argumentList!" />
<leaf symbol="u" />
<leaf symbol="args" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="argumentList!" />
<leaf symbol="u" />
<leaf symbol="args" />
<leaf symbol="theSymbolTable" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="argumentList!" />
<leaf symbol="args" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="checkIfEntryExists" />
<leaf symbol="currentSubProgramName" />
<leaf symbol="theSymbolTable" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="setelt!" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="theSymbolTable" />
<leaf symbol="currentSubProgramName" />
</list>
<leaf symbol="argList" />
<leaf symbol="args" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="returnType!" />
<leaf symbol="u" />
<leaf symbol="type" />
<leaf symbol="symbols" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="checkIfEntryExists" />
<leaf symbol="u" />
<leaf symbol="symbols" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="setelt!" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="symbols" />
<leaf symbol="u" />
</list>
<leaf symbol="returnType" />
<leaf symbol="type" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="returnType!" />
<leaf symbol="u" />
<leaf symbol="type" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="returnType!" />
<leaf symbol="u" />
<leaf symbol="type" />
<leaf symbol="theSymbolTable" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="returnType!" />
<leaf symbol="type" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="checkIfEntryExists" />
<leaf symbol="currentSubProgramName" />
<leaf symbol="theSymbolTable" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="setelt!" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="theSymbolTable" />
<leaf symbol="currentSubProgramName" />
</list>
<leaf symbol="returnType" />
<leaf symbol="type" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="declare!" />
<leaf symbol="u" />
<leaf symbol="type" />
</list>
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="declare!" />
<leaf symbol="u" />
<leaf symbol="type" />
<leaf symbol="currentSubProgramName" />
<leaf symbol="theSymbolTable" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="declare!" />
<leaf symbol="u" />
<leaf symbol="type" />
<leaf symbol="asp" />
<leaf symbol="symbols" />
</list>
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="checkIfEntryExists" />
<leaf symbol="asp" />
<leaf symbol="symbols" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SymbolTable" />
</list>
<leaf symbol="declare!" />
</list>
<leaf symbol="u" />
<leaf symbol="type" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="elt" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="symbols" />
<leaf symbol="asp" />
</list>
<leaf symbol="symtab" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="declare!" />
<leaf symbol="u" />
<leaf symbol="type" />
<leaf symbol="asp" />
<leaf symbol="syms" />
</list>
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="checkIfEntryExists" />
<leaf symbol="asp" />
<leaf symbol="syms" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SymbolTable" />
</list>
<leaf symbol="declare!" />
</list>
<leaf symbol="u" />
<leaf symbol="type" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="elt" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="syms" />
<leaf symbol="asp" />
</list>
<leaf symbol="symtab" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="declare!" />
<leaf symbol="u" />
<leaf symbol="type" />
<leaf symbol="asp" />
</list>
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="checkIfEntryExists" />
<leaf symbol="asp" />
<leaf symbol="theSymbolTable" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SymbolTable" />
</list>
<leaf symbol="declare!" />
</list>
<leaf symbol="u" />
<leaf symbol="type" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="elt" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="theSymbolTable" />
<leaf symbol="asp" />
</list>
<leaf symbol="symtab" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="printHeader" />
<leaf symbol="u" />
<leaf symbol="symbols" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="entry" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="symbols" />
<leaf symbol="u" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="FortranCodeTools" />
</list>
<leaf symbol="fortFormatHead" />
</list>
<leaf symbol="u" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="elt" />
</list>
<leaf symbol="entry" />
<leaf symbol="returnType" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="elt" />
</list>
<leaf symbol="entry" />
<leaf symbol="argList" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SymbolTable" />
</list>
<leaf symbol="printTypes" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="elt" />
</list>
<leaf symbol="entry" />
<leaf symbol="symtab" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="printHeader" />
<leaf symbol="u" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="printHeader" />
<leaf symbol="u" />
<leaf symbol="theSymbolTable" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="printHeader" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="printHeader" />
<leaf symbol="currentSubProgramName" />
<leaf symbol="theSymbolTable" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="printTypes" />
<leaf symbol="u" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="SymbolTable" />
</list>
<leaf symbol="printTypes" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Entry" />
<leaf symbol="elt" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="theSymbolTable" />
<leaf symbol="u" />
</list>
<leaf symbol="symtab" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="SymbolTable" />
</list>
<list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="CoercibleTo" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="CATEGORY" />
<leaf symbol="domain" />
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="empty" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="declare!" />
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="FortranType" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="declare!" />
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="fortranTypeOf" />
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="parametersOf" />
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="typeList" />
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="FortranScalarType" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="externalList" />
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="typeLists" />
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="newTypeLists" />
<list>
<list>
<leaf symbol="SExpression" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="printTypes" />
<list>
<list>
<leaf symbol="Void" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="symbolTable" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="key" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="entry" />
<list>
<leaf symbol="FortranType" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="import" />
<list>
<leaf symbol="FortranCodeTools" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="Rep" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="coerce" />
</list>
<leaf symbol="t" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="pretend" />
<leaf symbol="t" />
<list>
<leaf symbol="Table" />
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="symbolTable" />
<leaf symbol="l" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="key" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="entry" />
<list>
<leaf symbol="FortranType" />
</list>
</list>
</list>
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="table" />
</list>
<leaf symbol="l" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="empty" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="empty" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="parametersOf" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="keys" />
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="declare!" />
<leaf symbol="name" />
<leaf symbol="type" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<list>
<leaf symbol="FortranType" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="setelt!" />
</list>
<leaf symbol="tab" />
<leaf symbol="name" />
<leaf symbol="type" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="type" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="declare!" />
<leaf symbol="names" />
<leaf symbol="type" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="FortranType" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="name" />
<leaf symbol="names" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="setelt!" />
</list>
<leaf symbol="tab" />
<leaf symbol="name" />
<leaf symbol="type" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="type" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="fortranTypeOf" />
<leaf symbol="u" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="FortranType" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="elt" />
</list>
<leaf symbol="tab" />
<leaf symbol="u" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="externalList" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="COLLECT" />
<list>
<leaf symbol="IN" />
<leaf symbol="u" />
<list>
<leaf symbol="keys" />
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="|" />
<list>
<leaf symbol="external?" />
<list>
<leaf symbol="fortranTypeOf" />
<leaf symbol="u" />
<leaf symbol="tab" />
</list>
</list>
</list>
<leaf symbol="u" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="typeList" />
<leaf symbol="type" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="FortranScalarType" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="scalarList" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="construct" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="arrayList" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="construct" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="u" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="keys" />
</list>
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="uType" />
<list>
<leaf symbol="FortranType" />
</list>
</list>
<list>
<leaf symbol="fortranTypeOf" />
<leaf symbol="u" />
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="sType" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
</list>
<list>
<leaf symbol="scalarTypeOf" />
<leaf symbol="uType" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="sType" />
<leaf symbol="fst" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489911" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="sType" />
<leaf symbol="fst" />
</list>
<leaf symbol="type" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489911" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="uDim" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="COLLECT" />
<list>
<leaf symbol="IN" />
<leaf symbol="v" />
<list>
<leaf symbol="dimensionsOf" />
<leaf symbol="uType" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
<leaf symbol="construct" />
</list>
<leaf symbol="v" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489910" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="empty?" />
<leaf symbol="uDim" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489910" />
<list>
<leaf symbol="LET" />
<leaf symbol="scalarList" />
<list>
<leaf symbol="cons" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="construct" />
</list>
<leaf symbol="u" />
</list>
<leaf symbol="scalarList" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="arrayList" />
<list>
<leaf symbol="cons" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="construct" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="cons" />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="u" />
</list>
<leaf symbol="uDim" />
</list>
</list>
<leaf symbol="arrayList" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="append" />
<leaf symbol="scalarList" />
<leaf symbol="arrayList" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="typeList2" />
<leaf symbol="type" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="FortranScalarType" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="tl" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="construct" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="symbolType" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="FortranScalarType" />
</list>
<leaf symbol="coerce" />
</list>
<leaf symbol="type" />
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="u" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="keys" />
</list>
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="uType" />
<list>
<leaf symbol="FortranType" />
</list>
</list>
<list>
<leaf symbol="fortranTypeOf" />
<leaf symbol="u" />
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="sType" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
</list>
<list>
<leaf symbol="scalarTypeOf" />
<leaf symbol="uType" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="sType" />
<leaf symbol="fst" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489913" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<list>
<leaf symbol="sType" />
<leaf symbol="fst" />
</list>
<leaf symbol="type" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489913" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="uDim" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="COLLECT" />
<list>
<leaf symbol="IN" />
<leaf symbol="v" />
<list>
<leaf symbol="dimensionsOf" />
<leaf symbol="uType" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
<leaf symbol="construct" />
</list>
<leaf symbol="v" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="tl" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489912" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="empty?" />
<leaf symbol="uDim" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489912" />
<list>
<leaf symbol="cons" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="construct" />
</list>
<leaf symbol="u" />
</list>
<leaf symbol="tl" />
</list>
<list>
<leaf symbol="cons" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="construct" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="cons" />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="u" />
</list>
<leaf symbol="uDim" />
</list>
</list>
<leaf symbol="tl" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489914" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="empty?" />
<leaf symbol="tl" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489914" />
<leaf symbol="tl" />
<list>
<leaf symbol="cons" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="construct" />
</list>
<leaf symbol="symbolType" />
</list>
<leaf symbol="tl" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="updateList" />
<leaf symbol="sType" />
<leaf symbol="name" />
<leaf symbol="lDims" />
<leaf symbol="tl" />
</list>
<list>
<list>
<leaf symbol="SExpression" />
</list>
<list>
<leaf symbol="SExpression" />
</list>
<list>
<leaf symbol="SExpression" />
</list>
<list>
<leaf symbol="SExpression" />
</list>
<list>
<leaf symbol="SExpression" />
</list>
</list>
<list>
<list />
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="l" />
<list>
<leaf symbol="SExpression" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Lisp" />
<leaf symbol="ASSOC" />
</list>
<leaf symbol="sType" />
<leaf symbol="tl" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="entry" />
<list>
<leaf symbol="SExpression" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489915" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="null?" />
<leaf symbol="lDims" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489915" />
<leaf symbol="name" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Lisp" />
<leaf symbol="CONS" />
</list>
<leaf symbol="name" />
<leaf symbol="lDims" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489916" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="null?" />
<leaf symbol="l" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489916" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Lisp" />
<leaf symbol="CONS" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Lisp" />
<leaf symbol="construct" />
</list>
<leaf symbol="sType" />
<leaf symbol="entry" />
</list>
<leaf symbol="tl" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Lisp" />
<leaf symbol="RPLACD" />
</list>
<leaf symbol="l" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Lisp" />
<leaf symbol="CONS" />
</list>
<leaf symbol="entry" />
<list>
<leaf symbol="cdr" />
<leaf symbol="l" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="tl" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="newTypeLists" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="SExpression" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="tl" />
<list>
<leaf symbol="SExpression" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Lisp" />
<leaf symbol="construct" />
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="u" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="keys" />
</list>
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="uType" />
<list>
<leaf symbol="FortranType" />
</list>
</list>
<list>
<leaf symbol="fortranTypeOf" />
<leaf symbol="u" />
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="sType" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
</list>
<list>
<leaf symbol="scalarTypeOf" />
<leaf symbol="uType" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="dims" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="dimensionsOf" />
<leaf symbol="uType" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="lDims" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="SExpression" />
</list>
</list>
</list>
<list>
<leaf symbol="COLLECT" />
<list>
<leaf symbol="IN" />
<leaf symbol="v" />
<leaf symbol="dims" />
</list>
<list>
<leaf symbol="@" />
<list>
<leaf symbol="convert" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="convert" />
<leaf symbol="v" />
</list>
<list>
<leaf symbol="InputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="SExpression" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="lType" />
<list>
<leaf symbol="SExpression" />
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="sType" />
<leaf symbol="void" />
</list>
<list>
<leaf symbol="@" />
<list>
<leaf symbol="convert" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="void" />
</list>
</list>
<list>
<leaf symbol="SExpression" />
</list>
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="FortranScalarType" />
</list>
<leaf symbol="coerce" />
</list>
<list>
<leaf symbol="sType" />
<leaf symbol="fst" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="LET" />
<leaf symbol="tl" />
<list>
<leaf symbol="updateList" />
<leaf symbol="lType" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="convert" />
<leaf symbol="u" />
</list>
<list>
<leaf symbol="SExpression" />
</list>
</list>
<list>
<leaf symbol="@" />
<list>
<leaf symbol="convert" />
<leaf symbol="lDims" />
</list>
<list>
<leaf symbol="SExpression" />
</list>
</list>
<leaf symbol="tl" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="tl" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="typeLists" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="fortranTypes" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="real" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="double precision" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="integer" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="complex" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="logical" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="character" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="tl" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="construct" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="u" />
<leaf symbol="fortranTypes" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="types" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="typeList2" />
<leaf symbol="u" />
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489917" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="empty?" />
<leaf symbol="types" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489917" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="LET" />
<leaf symbol="tl" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<leaf symbol="cons" />
</list>
<leaf symbol="types" />
<leaf symbol="tl" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="tl" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="oForm2" />
<leaf symbol="w" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="w" />
<leaf symbol="S" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="w" />
<leaf symbol="S" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="w" />
<leaf symbol="P" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="w" />
<leaf symbol="P" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="oForm" />
<leaf symbol="v" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="v" />
<leaf symbol="name" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="v" />
<leaf symbol="name" />
</list>
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="v" />
<leaf symbol="bounds" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="ll" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="COLLECT" />
<list>
<leaf symbol="IN" />
<leaf symbol="uu" />
<list>
<leaf symbol="v" />
<leaf symbol="bounds" />
</list>
</list>
<list>
<leaf symbol="oForm2" />
<leaf symbol="uu" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="::" />
<leaf symbol="ll" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="outForm" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="COLLECT" />
<list>
<leaf symbol="IN" />
<leaf symbol="u" />
<leaf symbol="t" />
</list>
<list>
<leaf symbol="oForm" />
<leaf symbol="u" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="printTypes" />
<leaf symbol="tab" />
</list>
<list>
<list>
<leaf symbol="Void" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<leaf symbol="ft" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="::" />
<leaf string="integer" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="real" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="double precision" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="complex" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="logical" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="character" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="REPEAT" />
<list>
<leaf symbol="IN" />
<leaf symbol="ty" />
<leaf symbol="ft" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="tl" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="name" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="bounds" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="S" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="P" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="typeList" />
<leaf symbol="ty" />
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="otl" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="outForm" />
<leaf symbol="tl" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="fort_format_types" />
<list>
<leaf symbol="::" />
<leaf symbol="ty" />
<list>
<leaf symbol="String" />
</list>
</list>
<leaf symbol="otl" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="el" />
<list>
<leaf symbol="List" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
<list>
<leaf symbol="COLLECT" />
<list>
<leaf symbol="IN" />
<leaf symbol="u" />
<list>
<leaf symbol="externalList" />
<leaf symbol="tab" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="u" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="fort_format_types" />
<leaf string="EXTERNAL" />
<leaf symbol="el" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Void" />
</list>
<leaf symbol="void" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="FortranType" />
</list>
<list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="SetCategory" />
</list>
<list>
<leaf symbol="CATEGORY" />
<leaf symbol="domain" />
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="scalarTypeOf" />
<list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="dimensionsOf" />
<list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="external?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="construct" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="Boolean" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="construct" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
<list>
<leaf symbol="Boolean" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="fortranReal" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="fortranDouble" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="fortranInteger" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="fortranLogical" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="fortranComplex" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="fortranDoubleComplex" />
<list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="fortranCharacter" />
<list>
<leaf symbol="$" />
</list>
</list>
</list>
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="MDEF" />
<list>
<leaf symbol="Dims" />
</list>
<list>
<list />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="Rep" />
<list>
<leaf symbol="Record" />
<list>
<leaf symbol=":" />
<leaf symbol="type" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="dimensions" />
<leaf symbol="Dims" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="external" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="a" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol=":" />
<leaf symbol="t" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489855" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="external?" />
<leaf symbol="a" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489855" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489854" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="case" />
<list>
<leaf symbol="scalarTypeOf" />
<leaf symbol="a" />
</list>
<leaf symbol="void" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489854" />
<list>
<leaf symbol="LET" />
<leaf symbol="t" />
<list>
<leaf symbol="message" />
<leaf string="EXTERNAL" />
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="t" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="blankSeparate" />
</list>
<list>
<leaf symbol="construct" />
<list>
<leaf symbol="message" />
<leaf string="EXTERNAL" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<leaf symbol="coerce" />
</list>
<list>
<leaf symbol="scalarTypeOf" />
<leaf symbol="a" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<leaf symbol="t" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<leaf symbol="coerce" />
</list>
<list>
<leaf symbol="scalarTypeOf" />
<leaf symbol="a" />
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489856" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="empty?" />
<list>
<leaf symbol="dimensionsOf" />
<leaf symbol="a" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489856" />
<leaf symbol="t" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="sub" />
</list>
<leaf symbol="t" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="paren" />
</list>
<list>
<leaf symbol="COLLECT" />
<list>
<leaf symbol="IN" />
<leaf symbol="u" />
<list>
<leaf symbol="dimensionsOf" />
<leaf symbol="a" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf symbol="u" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="scalarTypeOf" />
<leaf symbol="u" />
</list>
<list>
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="u" />
<leaf symbol="type" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="dimensionsOf" />
<leaf symbol="u" />
</list>
<list>
<leaf symbol="Dims" />
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="u" />
<leaf symbol="dimensions" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="external?" />
<leaf symbol="u" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="u" />
<leaf symbol="external" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="construct" />
<leaf symbol="t" />
<leaf symbol="d" />
<leaf symbol="e" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<leaf symbol="e" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489857" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="empty?" />
<leaf symbol="d" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489857" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="exit" />
<leaf int="2" />
<list>
<leaf symbol="error" />
<leaf string="EXTERNAL objects cannot have dimensions" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<leaf symbol="e" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="void" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="error" />
<leaf string="VOID objects must be EXTERNAL" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf symbol="t" />
<list>
<leaf symbol="COLLECT" />
<list>
<leaf symbol="IN" />
<leaf symbol="l" />
<leaf symbol="d" />
</list>
<list>
<leaf symbol="::" />
<leaf symbol="l" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
<leaf symbol="e" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="construct" />
<leaf symbol="t" />
<leaf symbol="d" />
<leaf symbol="e" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<list />
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<leaf symbol="e" />
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489858" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="empty?" />
<leaf symbol="d" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489858" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="exit" />
<leaf int="2" />
<list>
<leaf symbol="error" />
<leaf string="EXTERNAL objects cannot have dimensions" />
</list>
</list>
</list>
</list>
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<leaf symbol="e" />
<leaf symbol="noBranch" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="void" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="error" />
<leaf string="VOID objects must be EXTERNAL" />
</list>
</list>
<leaf symbol="noBranch" />
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf symbol="t" />
<leaf symbol="d" />
<leaf symbol="e" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="u" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="construct" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="fst" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<list>
<leaf symbol=":" />
<leaf symbol="void" />
<leaf string="void" />
</list>
</list>
<leaf symbol="construct" />
</list>
<leaf symbol="u" />
</list>
<list>
<leaf symbol="@" />
<list>
<leaf symbol="construct" />
</list>
<list>
<leaf symbol="List" />
<list>
<leaf symbol="Polynomial" />
<list>
<leaf symbol="Integer" />
</list>
</list>
</list>
</list>
<leaf symbol="false" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="fortranReal" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="::" />
<leaf string="real" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="fortranDouble" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="::" />
<leaf string="double precision" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="fortranInteger" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="::" />
<leaf string="integer" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="fortranComplex" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="::" />
<leaf string="complex" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="fortranDoubleComplex" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="::" />
<leaf string="double complex" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="fortranCharacter" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="::" />
<leaf string="character" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="fortranLogical" />
</list>
<list>
<leaf symbol="$" />
</list>
<list>
<list />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="::" />
<leaf string="logical" />
<list>
<leaf symbol="FortranScalarType" />
</list>
</list>
<leaf symbol="$" />
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="FortranScalarType" />
</list>
<list>
<list>
<leaf symbol="Join" />
<list>
<leaf symbol="CoercibleTo" />
<list>
<leaf symbol="OutputForm" />
</list>
</list>
<list>
<leaf symbol="CATEGORY" />
<leaf symbol="domain" />
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<leaf symbol="$" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="coerce" />
<list>
<list>
<leaf symbol="SExpression" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="real?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="double?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="integer?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="complex?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="doubleComplex?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="character?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="logical?" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
</list>
<list>
<leaf symbol="SIGNATURE" />
<leaf symbol="=" />
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
<leaf symbol="$" />
</list>
</list>
</list>
</list>
</list>
<list>
<list />
</list>
<list>
<leaf symbol="CAPSULE" />
<list>
<leaf symbol="LET" />
<leaf symbol="Rep" />
<list>
<leaf symbol="Union" />
<list>
<leaf symbol=":" />
<leaf symbol="RealThing" />
<leaf string="real" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="IntegerThing" />
<leaf string="integer" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="ComplexThing" />
<leaf string="complex" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="CharacterThing" />
<leaf string="character" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="LogicalThing" />
<leaf string="logical" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="DoublePrecisionThing" />
<leaf string="double precision" />
</list>
<list>
<leaf symbol=":" />
<leaf symbol="DoubleComplexThing" />
<leaf string="double complex" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="doubleSymbol" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="double precision" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="upperDoubleSymbol" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="DOUBLE PRECISION" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="doubleComplexSymbol" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="double complex" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="upperDoubleComplexSymbol" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="::" />
<leaf string="DOUBLE COMPLEX" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="=" />
<leaf symbol="u" />
<leaf symbol="v" />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<list />
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="u" />
<leaf symbol="RealThing" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="v" />
<leaf symbol="RealThing" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="u" />
<leaf symbol="IntegerThing" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="v" />
<leaf symbol="IntegerThing" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="u" />
<leaf symbol="ComplexThing" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="v" />
<leaf symbol="ComplexThing" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="u" />
<leaf symbol="LogicalThing" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="v" />
<leaf symbol="LogicalThing" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="u" />
<leaf symbol="CharacterThing" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="v" />
<leaf symbol="CharacterThing" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="u" />
<leaf symbol="DoublePrecisionThing" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="v" />
<leaf symbol="DoublePrecisionThing" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="u" />
<leaf symbol="DoubleComplexThing" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="v" />
<leaf symbol="DoubleComplexThing" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="true" />
</list>
<leaf symbol="noBranch" />
</list>
<leaf symbol="noBranch" />
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<leaf symbol="false" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="OutputForm" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="RealThing" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="coerce" />
</list>
<list>
<leaf symbol="QUOTE" />
<leaf symbol="REAL" />
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="IntegerThing" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="coerce" />
</list>
<list>
<leaf symbol="QUOTE" />
<leaf symbol="INTEGER" />
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="ComplexThing" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="coerce" />
</list>
<list>
<leaf symbol="QUOTE" />
<leaf symbol="COMPLEX" />
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="CharacterThing" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="coerce" />
</list>
<list>
<leaf symbol="QUOTE" />
<leaf symbol="CHARACTER" />
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="DoublePrecisionThing" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="coerce" />
</list>
<leaf symbol="upperDoubleSymbol" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="DoubleComplexThing" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="coerce" />
</list>
<leaf symbol="upperDoubleComplexSymbol" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="coerce" />
</list>
<list>
<leaf symbol="QUOTE" />
<leaf symbol="LOGICAL" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="SExpression" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="@" />
<list>
<leaf symbol="convert" />
<list>
<leaf symbol="@" />
<list>
<leaf symbol="coerce" />
<leaf symbol="t" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
<list>
<leaf symbol="SExpression" />
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="Symbol" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="RealThing" />
</list>
<list>
<leaf symbol="QUOTE" />
<leaf symbol="real" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="IntegerThing" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="integer" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="ComplexThing" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="complex" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="CharacterThing" />
</list>
<list>
<leaf symbol="::" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="character" />
</list>
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="DoublePrecisionThing" />
</list>
<leaf symbol="doubleSymbol" />
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="DoublePrecisionThing" />
</list>
<leaf symbol="doubleComplexSymbol" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="logical" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="s" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489796" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="real" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489796" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="real" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489797" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="REAL" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489797" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="real" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489798" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="integer" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489798" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="integer" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489799" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="INTEGER" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489799" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="integer" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489800" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="complex" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489800" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="complex" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489801" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="COMPLEX" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489801" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="complex" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489802" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="character" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489802" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="character" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489803" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="CHARACTER" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489803" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="character" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489804" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="logical" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489804" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="logical" />
</list>
<list>
<leaf symbol="SEQ" />
<list>
<leaf symbol="LET" />
<list>
<leaf symbol=":" />
<leaf symbol="G18489805" />
<list>
<leaf symbol="Boolean" />
</list>
</list>
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<list>
<leaf symbol="QUOTE" />
<leaf symbol="LOGICAL" />
</list>
</list>
</list>
<list>
<leaf symbol="exit" />
<leaf int="1" />
<list>
<leaf symbol="IF" />
<leaf symbol="G18489805" />
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="logical" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf symbol="doubleSymbol" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="double precision" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf symbol="upperDoubleSymbol" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="double precision" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf symbol="doubleComplexSymbol" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="double complex" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf symbol="upperDoubleComplexSymbol" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="double complex" />
</list>
<leaf symbol="noBranch" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="s" />
</list>
<list>
<leaf symbol="$" />
<list>
<leaf symbol="String" />
</list>
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="real" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="real" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="integer" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="integer" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="complex" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="complex" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="character" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="character" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="logical" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="logical" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="double precision" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="double precision" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="double complex" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="double complex" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="REAL" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="real" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="INTEGER" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="integer" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="COMPLEX" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="complex" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="CHARACTER" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="character" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="LOGICAL" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="logical" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="DOUBLE PRECISION" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="double precision" />
</list>
<list>
<leaf symbol="IF" />
<list>
<leaf symbol="=" />
<leaf symbol="s" />
<leaf string="DOUBLE COMPLEX" />
</list>
<list>
<list>
<leaf symbol="Sel" />
<leaf symbol="Rep" />
<leaf symbol="construct" />
</list>
<leaf string="double complex" />
</list>
<list>
<leaf symbol="error" />
<list>
<list>
<leaf symbol="Sel" />
<list>
<leaf symbol="String" />
</list>
<leaf symbol="concat" />
</list>
<list>
<leaf symbol="construct" />
<leaf symbol="s" />
<leaf string=" is invalid as a Fortran Type" />
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="coerce" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="String" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="upperCase" />
<list>
<leaf symbol="string" />
<list>
<leaf symbol="::" />
<leaf symbol="t" />
<list>
<leaf symbol="Symbol" />
</list>
</list>
</list>
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="real?" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="RealThing" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="double?" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="DoublePrecisionThing" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="logical?" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="LogicalThing" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="integer?" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="IntegerThing" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="character?" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="CharacterThing" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="complex?" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="ComplexThing" />
</list>
</list>
<list>
<leaf symbol="DEF" />
<list>
<leaf symbol="doubleComplex?" />
<leaf symbol="t" />
</list>
<list>
<list>
<leaf symbol="Boolean" />
</list>
<leaf symbol="$" />
</list>
<list>
<list />
<list />
</list>
<list>
<leaf symbol="case" />
<leaf symbol="t" />
<leaf symbol="DoubleComplexThing" />
</list>
</list>
</list>
</list>
</func>
</file>
